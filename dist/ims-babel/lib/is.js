"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var typescript_1 = require("typescript");
exports.isAccessor = typescript_1.isAccessor;
exports.isArrayBindingPattern = typescript_1.isArrayBindingPattern;
exports.isArrayLiteralExpression = typescript_1.isArrayLiteralExpression;
exports.isArrayTypeNode = typescript_1.isArrayTypeNode;
exports.isArrowFunction = typescript_1.isArrowFunction;
exports.isAsExpression = typescript_1.isAsExpression;
exports.isAssertionExpression = typescript_1.isAssertionExpression;
exports.isAwaitExpression = typescript_1.isAwaitExpression;
exports.isBigIntLiteral = typescript_1.isBigIntLiteral;
exports.isBinaryExpression = typescript_1.isBinaryExpression;
exports.isBindingElement = typescript_1.isBindingElement;
exports.isBindingName = typescript_1.isBindingName;
exports.isBlock = typescript_1.isBlock;
exports.isBreakOrContinueStatement = typescript_1.isBreakOrContinueStatement;
exports.isBreakStatement = typescript_1.isBreakStatement;
exports.isBundle = typescript_1.isBundle;
exports.isCallExpression = typescript_1.isCallExpression;
exports.isCallLikeExpression = typescript_1.isCallLikeExpression;
exports.isCallOrNewExpression = typescript_1.isCallOrNewExpression;
exports.isCallSignatureDeclaration = typescript_1.isCallSignatureDeclaration;
exports.isCaseBlock = typescript_1.isCaseBlock;
exports.isCaseClause = typescript_1.isCaseClause;
exports.isCaseOrDefaultClause = typescript_1.isCaseOrDefaultClause;
exports.isCatchClause = typescript_1.isCatchClause;
exports.isClassDeclaration = typescript_1.isClassDeclaration;
exports.isClassElement = typescript_1.isClassElement;
exports.isClassExpression = typescript_1.isClassExpression;
exports.isClassLike = typescript_1.isClassLike;
exports.isClassOrTypeElement = typescript_1.isClassOrTypeElement;
exports.isComputedPropertyName = typescript_1.isComputedPropertyName;
exports.isConditionalExpression = typescript_1.isConditionalExpression;
exports.isConditionalTypeNode = typescript_1.isConditionalTypeNode;
exports.isConstTypeReference = typescript_1.isConstTypeReference;
exports.isConstructSignatureDeclaration = typescript_1.isConstructSignatureDeclaration;
exports.isConstructorDeclaration = typescript_1.isConstructorDeclaration;
exports.isConstructorTypeNode = typescript_1.isConstructorTypeNode;
exports.isContinueStatement = typescript_1.isContinueStatement;
exports.isDebuggerStatement = typescript_1.isDebuggerStatement;
exports.isDecorator = typescript_1.isDecorator;
exports.isDefaultClause = typescript_1.isDefaultClause;
exports.isDeleteExpression = typescript_1.isDeleteExpression;
exports.isDoStatement = typescript_1.isDoStatement;
exports.isElementAccessExpression = typescript_1.isElementAccessExpression;
exports.isEmptyBindingElement = typescript_1.isEmptyBindingElement;
exports.isEmptyBindingPattern = typescript_1.isEmptyBindingPattern;
exports.isEmptyStatement = typescript_1.isEmptyStatement;
exports.isEntityName = typescript_1.isEntityName;
exports.isEnumDeclaration = typescript_1.isEnumDeclaration;
exports.isEnumMember = typescript_1.isEnumMember;
exports.isExportAssignment = typescript_1.isExportAssignment;
exports.isExportDeclaration = typescript_1.isExportDeclaration;
exports.isExportSpecifier = typescript_1.isExportSpecifier;
exports.isExpressionStatement = typescript_1.isExpressionStatement;
exports.isExpressionWithTypeArguments = typescript_1.isExpressionWithTypeArguments;
exports.isExternalModule = typescript_1.isExternalModule;
exports.isExternalModuleNameRelative = typescript_1.isExternalModuleNameRelative;
exports.isExternalModuleReference = typescript_1.isExternalModuleReference;
exports.isForInStatement = typescript_1.isForInStatement;
exports.isForOfStatement = typescript_1.isForOfStatement;
exports.isForStatement = typescript_1.isForStatement;
exports.isFunctionDeclaration = typescript_1.isFunctionDeclaration;
exports.isFunctionExpression = typescript_1.isFunctionExpression;
exports.isFunctionLike = typescript_1.isFunctionLike;
exports.isFunctionOrConstructorTypeNode = typescript_1.isFunctionOrConstructorTypeNode;
exports.isFunctionTypeNode = typescript_1.isFunctionTypeNode;
exports.isGetAccessor = typescript_1.isGetAccessor;
exports.isGetAccessorDeclaration = typescript_1.isGetAccessorDeclaration;
exports.isHeritageClause = typescript_1.isHeritageClause;
exports.isIdentifier = typescript_1.isIdentifier;
exports.isIdentifierPart = typescript_1.isIdentifierPart;
exports.isIdentifierStart = typescript_1.isIdentifierStart;
exports.isIfStatement = typescript_1.isIfStatement;
exports.isImportClause = typescript_1.isImportClause;
exports.isImportDeclaration = typescript_1.isImportDeclaration;
exports.isImportEqualsDeclaration = typescript_1.isImportEqualsDeclaration;
exports.isImportOrExportSpecifier = typescript_1.isImportOrExportSpecifier;
exports.isImportSpecifier = typescript_1.isImportSpecifier;
exports.isImportTypeNode = typescript_1.isImportTypeNode;
exports.isIndexSignatureDeclaration = typescript_1.isIndexSignatureDeclaration;
exports.isIndexedAccessTypeNode = typescript_1.isIndexedAccessTypeNode;
exports.isInferTypeNode = typescript_1.isInferTypeNode;
exports.isInterfaceDeclaration = typescript_1.isInterfaceDeclaration;
exports.isIntersectionTypeNode = typescript_1.isIntersectionTypeNode;
exports.isIterationStatement = typescript_1.isIterationStatement;
exports.isJSDoc = typescript_1.isJSDoc;
exports.isJSDocAllType = typescript_1.isJSDocAllType;
exports.isJSDocAugmentsTag = typescript_1.isJSDocAugmentsTag;
exports.isJSDocCallbackTag = typescript_1.isJSDocCallbackTag;
exports.isJSDocClassTag = typescript_1.isJSDocClassTag;
exports.isJSDocCommentContainingNode = typescript_1.isJSDocCommentContainingNode;
exports.isJSDocEnumTag = typescript_1.isJSDocEnumTag;
exports.isJSDocFunctionType = typescript_1.isJSDocFunctionType;
exports.isJSDocNonNullableType = typescript_1.isJSDocNonNullableType;
exports.isJSDocNullableType = typescript_1.isJSDocNullableType;
exports.isJSDocOptionalType = typescript_1.isJSDocOptionalType;
exports.isJSDocParameterTag = typescript_1.isJSDocParameterTag;
exports.isJSDocPropertyLikeTag = typescript_1.isJSDocPropertyLikeTag;
exports.isJSDocPropertyTag = typescript_1.isJSDocPropertyTag;
exports.isJSDocReturnTag = typescript_1.isJSDocReturnTag;
exports.isJSDocSignature = typescript_1.isJSDocSignature;
exports.isJSDocTemplateTag = typescript_1.isJSDocTemplateTag;
exports.isJSDocThisTag = typescript_1.isJSDocThisTag;
exports.isJSDocTypeExpression = typescript_1.isJSDocTypeExpression;
exports.isJSDocTypeLiteral = typescript_1.isJSDocTypeLiteral;
exports.isJSDocTypeTag = typescript_1.isJSDocTypeTag;
exports.isJSDocTypedefTag = typescript_1.isJSDocTypedefTag;
exports.isJSDocUnknownType = typescript_1.isJSDocUnknownType;
exports.isJSDocVariadicType = typescript_1.isJSDocVariadicType;
exports.isJsxAttribute = typescript_1.isJsxAttribute;
exports.isJsxAttributes = typescript_1.isJsxAttributes;
exports.isJsxClosingElement = typescript_1.isJsxClosingElement;
exports.isJsxClosingFragment = typescript_1.isJsxClosingFragment;
exports.isJsxElement = typescript_1.isJsxElement;
exports.isJsxExpression = typescript_1.isJsxExpression;
exports.isJsxFragment = typescript_1.isJsxFragment;
exports.isJsxOpeningElement = typescript_1.isJsxOpeningElement;
exports.isJsxOpeningFragment = typescript_1.isJsxOpeningFragment;
exports.isJsxOpeningLikeElement = typescript_1.isJsxOpeningLikeElement;
exports.isJsxSelfClosingElement = typescript_1.isJsxSelfClosingElement;
exports.isJsxSpreadAttribute = typescript_1.isJsxSpreadAttribute;
exports.isJsxText = typescript_1.isJsxText;
exports.isLabeledStatement = typescript_1.isLabeledStatement;
exports.isLineBreak = typescript_1.isLineBreak;
exports.isLiteralExpression = typescript_1.isLiteralExpression;
exports.isLiteralTypeNode = typescript_1.isLiteralTypeNode;
exports.isMappedTypeNode = typescript_1.isMappedTypeNode;
exports.isMetaProperty = typescript_1.isMetaProperty;
exports.isMethodDeclaration = typescript_1.isMethodDeclaration;
exports.isMethodSignature = typescript_1.isMethodSignature;
exports.isMissingDeclaration = typescript_1.isMissingDeclaration;
exports.isModifier = typescript_1.isModifier;
exports.isModuleBlock = typescript_1.isModuleBlock;
exports.isModuleDeclaration = typescript_1.isModuleDeclaration;
exports.isNamedExports = typescript_1.isNamedExports;
exports.isNamedImports = typescript_1.isNamedImports;
exports.isNamespaceExportDeclaration = typescript_1.isNamespaceExportDeclaration;
exports.isNamespaceImport = typescript_1.isNamespaceImport;
exports.isNewExpression = typescript_1.isNewExpression;
exports.isNoSubstitutionTemplateLiteral = typescript_1.isNoSubstitutionTemplateLiteral;
exports.isNonNullExpression = typescript_1.isNonNullExpression;
exports.isNumericLiteral = typescript_1.isNumericLiteral;
exports.isObjectBindingPattern = typescript_1.isObjectBindingPattern;
exports.isObjectLiteralElement = typescript_1.isObjectLiteralElement;
exports.isObjectLiteralElementLike = typescript_1.isObjectLiteralElementLike;
exports.isObjectLiteralExpression = typescript_1.isObjectLiteralExpression;
exports.isOmittedExpression = typescript_1.isOmittedExpression;
exports.isParameter = typescript_1.isParameter;
exports.isParameterPropertyDeclaration = typescript_1.isParameterPropertyDeclaration;
exports.isParenthesizedExpression = typescript_1.isParenthesizedExpression;
exports.isParenthesizedTypeNode = typescript_1.isParenthesizedTypeNode;
exports.isParseTreeNode = typescript_1.isParseTreeNode;
exports.isPostfixUnaryExpression = typescript_1.isPostfixUnaryExpression;
exports.isPrefixUnaryExpression = typescript_1.isPrefixUnaryExpression;
exports.isPropertyAccessExpression = typescript_1.isPropertyAccessExpression;
exports.isPropertyAccessOrQualifiedName = typescript_1.isPropertyAccessOrQualifiedName;
exports.isPropertyAssignment = typescript_1.isPropertyAssignment;
exports.isPropertyDeclaration = typescript_1.isPropertyDeclaration;
exports.isPropertyName = typescript_1.isPropertyName;
exports.isPropertySignature = typescript_1.isPropertySignature;
exports.isQualifiedName = typescript_1.isQualifiedName;
exports.isRegularExpressionLiteral = typescript_1.isRegularExpressionLiteral;
exports.isReturnStatement = typescript_1.isReturnStatement;
exports.isSemicolonClassElement = typescript_1.isSemicolonClassElement;
exports.isSetAccessor = typescript_1.isSetAccessor;
exports.isSetAccessorDeclaration = typescript_1.isSetAccessorDeclaration;
exports.isShorthandPropertyAssignment = typescript_1.isShorthandPropertyAssignment;
exports.isSourceFile = typescript_1.isSourceFile;
exports.isSpreadAssignment = typescript_1.isSpreadAssignment;
exports.isSpreadElement = typescript_1.isSpreadElement;
exports.isStringLiteral = typescript_1.isStringLiteral;
exports.isStringLiteralLike = typescript_1.isStringLiteralLike;
exports.isStringTextContainingNode = typescript_1.isStringTextContainingNode;
exports.isSwitchStatement = typescript_1.isSwitchStatement;
exports.isTaggedTemplateExpression = typescript_1.isTaggedTemplateExpression;
exports.isTemplateExpression = typescript_1.isTemplateExpression;
exports.isTemplateHead = typescript_1.isTemplateHead;
exports.isTemplateLiteral = typescript_1.isTemplateLiteral;
exports.isTemplateLiteralToken = typescript_1.isTemplateLiteralToken;
exports.isTemplateMiddle = typescript_1.isTemplateMiddle;
exports.isTemplateMiddleOrTemplateTail = typescript_1.isTemplateMiddleOrTemplateTail;
exports.isTemplateSpan = typescript_1.isTemplateSpan;
exports.isTemplateTail = typescript_1.isTemplateTail;
exports.isThisTypeNode = typescript_1.isThisTypeNode;
exports.isThrowStatement = typescript_1.isThrowStatement;
exports.isToken = typescript_1.isToken;
exports.isTryStatement = typescript_1.isTryStatement;
exports.isTupleTypeNode = typescript_1.isTupleTypeNode;
exports.isTypeAliasDeclaration = typescript_1.isTypeAliasDeclaration;
exports.isTypeAssertion = typescript_1.isTypeAssertion;
exports.isTypeElement = typescript_1.isTypeElement;
exports.isTypeLiteralNode = typescript_1.isTypeLiteralNode;
exports.isTypeNode = typescript_1.isTypeNode;
exports.isTypeOfExpression = typescript_1.isTypeOfExpression;
exports.isTypeOperatorNode = typescript_1.isTypeOperatorNode;
exports.isTypeParameterDeclaration = typescript_1.isTypeParameterDeclaration;
exports.isTypePredicateNode = typescript_1.isTypePredicateNode;
exports.isTypeQueryNode = typescript_1.isTypeQueryNode;
exports.isTypeReferenceNode = typescript_1.isTypeReferenceNode;
exports.isUnionTypeNode = typescript_1.isUnionTypeNode;
exports.isUnparsedNode = typescript_1.isUnparsedNode;
exports.isUnparsedPrepend = typescript_1.isUnparsedPrepend;
exports.isUnparsedSource = typescript_1.isUnparsedSource;
exports.isUnparsedTextLike = typescript_1.isUnparsedTextLike;
exports.isVariableDeclaration = typescript_1.isVariableDeclaration;
exports.isVariableDeclarationList = typescript_1.isVariableDeclarationList;
exports.isVariableStatement = typescript_1.isVariableStatement;
exports.isVoidExpression = typescript_1.isVoidExpression;
exports.isWhileStatement = typescript_1.isWhileStatement;
exports.isWhiteSpaceLike = typescript_1.isWhiteSpaceLike;
exports.isWhiteSpaceSingleLine = typescript_1.isWhiteSpaceSingleLine;
exports.isWithStatement = typescript_1.isWithStatement;
exports.isYieldExpression = typescript_1.isYieldExpression;
